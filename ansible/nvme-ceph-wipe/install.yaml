---
- name: Wipe Ceph BlueStore data from NVMe partitions
  become: true
  hosts: masters
  vars:
    nvme_device: "/dev/nvme0n1"
    ceph_partition: "{{ nvme_device }}p3"
    
  tasks:
    - name: Ping hosts
      ping:

    - name: Mask Ceph and related services
      systemd:
        name: "{{ item }}"
        masked: yes
      loop:
        - ceph-osd
        - rbdmap
        - ceph-crash
        - nvmf-autoconnect
        - nvmefc-boot-connections
        - smartmontools
      ignore_errors: yes

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install ceph-osd package
      apt:
        name: ceph-osd
        state: present

    - name: Check if Ceph partition exists
      stat:
        path: "{{ ceph_partition }}"
      register: ceph_partition_stat

    - name: Show current partition information
      command: parted {{ nvme_device }} print
      register: partition_info_before
      ignore_errors: yes
      when: ceph_partition_stat.stat.exists

    - name: Display current partition information
      debug:
        msg: "{{ partition_info_before.stdout_lines }}"
      when: ceph_partition_stat.stat.exists and partition_info_before is defined

    - name: Clean /var/lib/rook content (preserve lost+found)
      shell: |
        if [ -d "/var/lib/rook" ]; then
          echo "=== Cleaning /var/lib/rook content ==="
          cd /var/lib/rook
          
          # Remove all files and directories except lost+found
          find . -mindepth 1 -maxdepth 1 ! -name 'lost+found' -exec rm -rf {} + 2>/dev/null || true
          
          echo "Cleaned /var/lib/rook (preserved lost+found if it exists)"
          echo "Remaining content:"
          ls -la /var/lib/rook
        else
          echo "/var/lib/rook directory does not exist, skipping cleanup"
        fi
      ignore_errors: yes

    - name: Zap Ceph partition with ceph-volume
      command: ceph-volume lvm zap {{ ceph_partition }}
      register: zap_result
      when: ceph_partition_stat.stat.exists

    - name: Remove PARTLABEL from Ceph partition (GPT)
      command: parted {{ nvme_device }} -s name 2 "notset"
      register: partlabel_removal
      when: ceph_partition_stat.stat.exists

    - name: Show updated partition information
      command: parted {{ nvme_device }} print
      register: partition_info_after
      ignore_errors: yes
      when: ceph_partition_stat.stat.exists

    - name: Display updated partition information
      debug:
        msg: "{{ partition_info_after.stdout_lines }}"
      when: ceph_partition_stat.stat.exists and partition_info_after is defined

    - name: Remove ceph-osd package
      apt:
        name: ceph-osd
        state: absent

    - name: Run apt autoremove
      apt:
        autoremove: yes

    - name: Unmask Ceph and related services
      systemd:
        name: "{{ item }}"
        masked: no
      loop:
        - ceph-osd
        - rbdmap
        - ceph-crash
        - nvmf-autoconnect
        - nvmefc-boot-connections
        - smartmontools
      ignore_errors: yes

    - name: Show partition not found message
      debug:
        msg: "Ceph partition {{ ceph_partition }} not found, skipping zap operation"
      when: not ceph_partition_stat.stat.exists

    - name: Display final status
      shell: |
        echo "=== Partition status for {{ nvme_device }} ==="
        lsblk {{ nvme_device }} || echo "Device not found"
        echo ""
        echo "=== Ceph partition status ==="
        if [ -b "{{ ceph_partition }}" ]; then
          echo "Partition {{ ceph_partition }} exists"
          file -s {{ ceph_partition }}
        else
          echo "Partition {{ ceph_partition }} not found"
        fi
      register: final_status

    - name: Show final status
      debug:
        msg: "{{ final_status.stdout_lines }}"
