name: Push Manifests
description: Push Kubernetes manifests to the manifests repository

inputs:
  environment:
    description: 'Environment (dev or prod)'
    required: true
  project-name:
    description: 'Project name'
    required: false
    default: ''
  cluster:
    description: 'Cluster name'
    required: false
    default: 'homelab'
  manifest-file:
    description: 'Path to manifest file to push'
    required: true
  manifests-repo:
    description: 'Manifests repository (owner/repo)'
    required: false
    default: 'zengarden-space/manifests'
  token:
    description: 'GitHub/Gitea token with write access to manifests repo'
    required: true
  commit-message:
    description: 'Commit message'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Determine project name
      id: project
      shell: bash
      run: |
        if [ -n "${{ inputs.project-name }}" ]; then
          project_name="${{ inputs.project-name }}"
        else
          project_name=$(echo ${{ github.repository }} | cut -d'/' -f2)
        fi
        echo "name=$project_name" >> $GITHUB_OUTPUT
        echo "Project name: $project_name"

    - name: Checkout manifests repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.manifests-repo }}
        ref: 'main'
        path: manifests-repo
        token: ${{ inputs.token }}

    - name: Push changes to manifests repo
      shell: bash
      run: |
        project_name="${{ steps.project.outputs.name }}"
        cd manifests-repo
        git config --local user.name "Gitea Actions Bot"
        git config --local user.email "gitea-actions[bot]@users.noreply.zengarden.space"

        # Determine commit message
        if [ -n "${{ inputs.commit-message }}" ]; then
          commit_msg="${{ inputs.commit-message }}"
        else
          commit_msg="${{ github.repository }}: ${{ github.event.head_commit.message }} ${{ github.sha }}"
        fi

        # Retry loop for git operations
        for attempt in {1..5}; do
          echo "Attempt $attempt of 5"

          # Pull latest changes
          if ! git pull origin main; then
            echo "Failed to pull on attempt $attempt"
            continue
          fi

          # Copy manifest and add files
          mkdir -p ./${{ inputs.cluster }}/${{ inputs.environment }}/$project_name
          cp ../${{ inputs.manifest-file }} ./${{ inputs.cluster }}/${{ inputs.environment }}/$project_name/manifest.yaml
          git add .

          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
            break
          fi

          # Commit changes
          if ! git commit -m "$commit_msg"; then
            echo "Failed to commit on attempt $attempt"
            git reset --hard HEAD
            continue
          fi

          # Try to push
          if git push origin main; then
            echo "Successfully pushed on attempt $attempt"
            break
          else
            echo "Failed to push on attempt $attempt, discarding commit"
            git reset --hard HEAD~1

            if [ $attempt -eq 5 ]; then
              echo "Failed to push after 5 attempts"
              exit 1
            fi

            sleep $((attempt * 2))  # Exponential backoff
          fi
        done