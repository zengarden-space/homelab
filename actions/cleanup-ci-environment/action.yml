name: Cleanup CI Environment
description: Delete CI environment manifest directory (file operations only, no git commit/push)

inputs:
  slug:
    description: 'Environment slug (e.g., branch name) - will be hashed to find environment ID'
    required: true
  project-name:
    description: 'Project name'
    required: false
    default: ''
  cluster:
    description: 'Cluster name'
    required: false
    default: 'homelab'
  manifests-repo-path:
    description: 'Path to checked-out manifests repository'
    required: false
    default: 'manifests-repo'

outputs:
  environment-id:
    description: 'Environment identifier (sha256 hash of slug)'
    value: ${{ steps.env.outputs.id }}
  deleted:
    description: 'Whether files were deleted (true/false)'
    value: ${{ steps.cleanup.outputs.deleted }}

runs:
  using: composite
  steps:
    - name: Determine project name
      id: project
      shell: bash
      run: |
        if [ -n "${{ inputs.project-name }}" ]; then
          project_name="${{ inputs.project-name }}"
        else
          project_name=$(echo ${{ github.repository }} | cut -d'/' -f2)
        fi
        echo "name=$project_name" >> $GITHUB_OUTPUT
        echo "Project name: $project_name"

    - name: Calculate environment ID
      id: env
      shell: bash
      run: |
        slug="${{ inputs.slug }}"
        env_id=$(echo -n "$slug" | sha256sum | cut -c1-8)
        echo "id=$env_id" >> $GITHUB_OUTPUT
        echo "Slug: $slug"
        echo "Environment ID: $env_id"

    - name: Delete CI environment directory
      id: cleanup
      shell: bash
      run: |
        project_name="${{ steps.project.outputs.name }}"
        env_id="${{ steps.env.outputs.id }}"

        ci_dir="${{ inputs.manifests-repo-path }}/${{ inputs.cluster }}/ci-${env_id}/${project_name}"

        if [ ! -d "$ci_dir" ]; then
          echo "CI environment directory does not exist: $ci_dir"
          echo "Nothing to cleanup"
          echo "deleted=false" >> $GITHUB_OUTPUT
          exit 0
        fi

        echo "Deleting CI environment directory: $ci_dir"
        rm -rf "$ci_dir"

        # Check if parent directory is empty and remove if so
        parent_dir="${{ inputs.manifests-repo-path }}/${{ inputs.cluster }}/ci-${env_id}"
        if [ -d "$parent_dir" ] && [ -z "$(ls -A $parent_dir)" ]; then
          echo "Parent directory is empty, removing: $parent_dir"
          rm -rf "$parent_dir"
        fi

        echo "Successfully deleted CI environment directory"
        echo "deleted=true" >> $GITHUB_OUTPUT
