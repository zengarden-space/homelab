replicaCount: 1

image:
  repository: ghcr.io/druggeri/alertmanager_gotify_bridge
  pullPolicy: IfNotPresent
  tag: "2.3.2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

config:
  # Gotify configuration
  gotifyEndpoint: "http://gotify-headless/message"
  gotifyToken: ""
  
  # Server configuration
  bindAddress: "0.0.0.0"
  port: 8080
  webhookPath: "/gotify_webhook"
  timeout: "5s"
  
  # Alert configuration
  titleAnnotation: "summary"
  messageAnnotation: "description"
  priorityAnnotation: "priority"
  defaultPriority: 5
  
  # Metrics configuration
  metricsAuthUsername: ""
  metricsAuthPassword: ""
  metricsNamespace: "alertmanager_gotify_bridge"
  metricsPath: "/metrics"
  
  # Feature flags
  extendedDetails: false
  dispatchErrors: false
  debug: false

# Environment variables
env: []

# Volume mounts for custom templates
volumes: []
volumeMounts: []

# Custom templates configuration
templates:
  # Enable custom templates
  enabled: false
  
  # Custom templates as a map of filename -> template content
  # Template files will be mounted to /templates directory
  # Supported extensions: .gohtml, .gotmpl, .tmpl
  # Template names should follow the pattern: title=<token> for title templates, <token> for message templates
  # Example:
  # files:
  #   "title=mytoken.gotmpl": |
  #     {{ .Labels.alertname }} - {{ .Annotations.summary }}
  #   "mytoken.gotmpl": |
  #     **Alert:** {{ .Labels.alertname }}
  #     **Status:** {{ .Status }}
  #     **Description:** {{ .Annotations.description }}
  #     {{ if .Labels.instance }}**Instance:** {{ .Labels.instance }}{{ end }}
  files: {}

# Network policy configuration
networkPolicy:
  enabled: true
  ingress:
    # Allow monitoring/metrics scraping from Prometheus/VictoriaMetrics
    allowMonitoring: true
    # Additional custom ingress rules
    extraRules: []
  egress:
    # Additional custom egress rules
    extraRules: []
