{{- if .Values.personalAccessTokens.enabled }}
{{- range $tokenName, $tokenConfig := .Values.personalAccessTokens.tokens }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gitea-automation.fullname" $ }}-token-{{ $tokenName }}-{{ $tokenConfig.scopes | sha1sum | trunc 7 }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "gitea-automation.labels" $ | nindent 4 }}
    app.kubernetes.io/component: pat-generator
spec:
  backoffLimit: {{ $.Values.job.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "gitea-automation.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: pat-generator
    spec:
      restartPolicy: {{ $.Values.job.restartPolicy }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: wait-for-gitea
        image: curlimages/curl:8.5.0
        imagePullPolicy: {{ $.Values.job.image.pullPolicy }}
        securityContext:
          {{- toYaml $.Values.job.securityContext | nindent 10 }}
        command:
        - sh
        - -c
        - |
          echo "Waiting for Gitea to be ready..."
          until curl -f -s http://{{ $.Values.gitea.service.name }}.{{ $.Values.gitea.service.namespace }}.svc.cluster.local:{{ $.Values.gitea.service.port }}/api/v1/version > /dev/null 2>&1; do
            echo "Gitea is not ready yet. Retrying in 5 seconds..."
            sleep 5
          done
          echo "Gitea is ready!"
      containers:
      - name: pat-generator
        image: alpine/kubectl:1.34.1
        imagePullPolicy: {{ $.Values.job.image.pullPolicy }}
        securityContext:
          {{- toYaml $.Values.job.securityContext | nindent 10 }}
        command: ['/bin/sh']
        args: ['/scripts/token-generator.sh']
        env:
        - name: TOKEN_NAME
          value: {{ $tokenName | quote }}
        - name: TOKEN_SCOPES
          value: {{ $tokenConfig.scopes | quote }}
        - name: TOKEN_USER
          value: {{ $tokenConfig.user | quote }}
        - name: TOKEN_SCOPES_HASH
          value: {{ $tokenConfig.scopes | sha1sum | trunc 7 | quote }}
        - name: RELEASE_NAMESPACE
          value: {{ $.Release.Namespace | quote }}
        - name: GITEA_NAMESPACE
          value: {{ $.Values.gitea.service.namespace | quote }}
        volumeMounts:
        - name: token-generator-volume
          mountPath: /scripts
          readOnly: true
      volumes:
      - name: token-generator-volume
        configMap:
          name: {{ include "gitea-automation.fullname" $ }}-token-generator
          defaultMode: 0755
      serviceAccountName: {{ include "gitea-automation.fullname" $ }}-pat-generator
{{- end }}
{{- end }}
