✅ DerivedSecret Operator has been installed!

📋 NEXT STEPS:

1. Verify the operator is running:
   kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "derived-secret-operator.name" . }}

2. Check operator logs:
   kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "derived-secret-operator.name" . }} -c operator -f

3. Create a DerivedSecret resource:
   cat <<EXAMPLE | kubectl apply -f -
   apiVersion: zengarden.space/v1
   kind: DerivedSecret
   metadata:
     name: my-app
     namespace: secrets
   spec:
     adminPassword: 32
     jwtSecret: 64
     sessionToken: 32
     encryptionKey: 64
   EXAMPLE

4. Check the generated Secret:
   kubectl get secret my-app-derived -n secrets -o yaml

5. List all DerivedSecrets:
   kubectl get derivedsecrets --all-namespaces

⚠️  SECURITY REMINDERS:

{{- if not .Values.masterPassword.value }}
- You need to create a master password secret manually:
  kubectl create secret generic master-password \
    -n {{ .Release.Namespace }} \
    --from-literal=master-password="$(openssl rand -base64 32)"
{{- else }}
- WARNING: Master password is stored in values.yaml
- For production, use Sealed Secrets or External Secrets Operator
{{- end }}

- Backup your master password securely offline
- Rotating the master password requires regenerating ALL secrets
- The master password is a single point of failure

📚 Documentation:
   https://github.com/zengarden/derived-secret-operator

🔐 Argon2 Configuration:
   Time Cost: {{ .Values.cryptoSidecar.argon2.timeCost }}
   Memory: {{ .Values.cryptoSidecar.argon2.memoryCost }}KB ({{ div .Values.cryptoSidecar.argon2.memoryCost 1024 }}MB)
   Parallelism: {{ .Values.cryptoSidecar.argon2.parallelism }}
