environments:
  default:
    values:
      - env.yaml
---
helmDefaults:
  wait: true
  timeout: 600

repositories:
  - name: my-gotify
    url: https://pmoscode-helm.github.io/gotify/
  - name: wiremind
    url: https://wiremind.github.io/wiremind-helm-charts
  - name: grafana
    url: https://grafana.github.io/helm-charts

releases:
  - name: vm
    namespace: victoria-metrics
    chart: oci://ghcr.io/victoriametrics/helm-charts/victoria-metrics-k8s-stack
    version: 0.48.1
    values:
      - grafana:
          ingress:
            enabled: true
            ingressClassName: internal
            hosts:
              - grafana.homelab.int.{{ .Values.domain }}
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            tls:
              - secretName: grafana-tls
                hosts:
                  - grafana.homelab.int.{{ .Values.domain }}

          # Enable unified alerting (Grafana 8+)
          grafana.ini:
            unified_alerting:
              enabled: true
            alerting:
              enabled: false  # Disable legacy alerting

            # Configure external URL for proper links in alerts
            server:
              root_url: https://grafana.homelab.int.{{ .Values.domain }}
              serve_from_sub_path: false

          # Preconfigure Loki datasource
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Loki
                  type: loki
                  access: proxy
                  url: http://loki-gateway.victoria-metrics.svc.cluster.local
                  jsonData:
                    maxLines: 1000
                  isDefault: false
                  editable: true
        
        # k3s specifics
        kubeApiServer:
          enabled: false
        kubeControllerManager:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false   
        kubelet:
          enabled: false

        alertmanager:
          enabled: true
          spec:
            externalURL: "https://alerts.homelab.int.{{ .Values.domain }}"
          ingress:
            enabled: true
            ingressClassName: internal
            hosts:
              - alerts.homelab.int.{{ .Values.domain }}
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            tls:
              - secretName: alerts-tls
                hosts:
                  - alerts.homelab.int.{{ .Values.domain }}
          config:
            route:
              receiver: gotify-notifications
              routes:
              - receiver: devnull
                matchers:
                  - alertname=~"InfoInhibitor|Watchdog"
            receivers:
              - name: devnull
              - name: gotify-notifications
                webhook_configs:
                  - url: http://alertmanager-gotify-nodejs/
                    send_resolved: false

        # Configure vmalert to use alertmanager
        vmalert:
          spec:
            notifier:
              url: http://vmalertmanager-vm-victoria-metrics-k8s-stack:9093
        
        prometheus-node-exporter:
          hostNetwork: false

  - name: gotify
    chart: my-gotify/gotify
    namespace: victoria-metrics
    version: 0.5.2
    values:
      - deploymentStrategy:
          type: Recreate
        ingress:
          enabled: true
          className: "external"
          hosts:
            - host: notifications.{{ .Values.domain }}
              paths:
              - path: /
                pathType: ImplementationSpecific
          tls:
          - hosts:
            - notifications.{{ .Values.domain }}
            secretName: notifications-tls
        persistence:
          enabled: true
        server:
          defaultUserPassword: {{ .Values.notifications.adminPassword }}

  - name: alertmanager-gotify-nodejs
    chart: ./charts/alertmanager-gotify-nodejs
    namespace: victoria-metrics
    values:
      - config:
          gotifyEndpoint: "http://gotify-headless/message"
          gotifyToken: "{{ .Values.notifications.apiToken }}"
          listenPort: 8435
          listenAddr: "0.0.0.0"
          defaultPriority: 5
          sendResolved: false
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        service:
          type: ClusterIP
          port: 80
        probes:
          liveness:
            enabled: true
            initialDelaySeconds: 30
          readiness:
            enabled: true
            initialDelaySeconds: 5

  - name: loki
    namespace: victoria-metrics
    chart: grafana/loki
    version: 6.23.0
    values:
      - deploymentMode: SingleBinary
        loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          storage:
            type: 'filesystem'
          schemaConfig:
            configs:
              - from: "2024-01-01"
                store: tsdb
                object_store: filesystem
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
        singleBinary:
          replicas: 1
          persistence:
            enabled: true
            size: 10Gi
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
        chunksCache:
          enabled: false
        resultsCache:
          enabled: false
        gateway:
          enabled: true
          replicas: 1
          service:
            type: ClusterIP
        backend:
          replicas: 0
        read:
          replicas: 0
        write:
          replicas: 0
        monitoring:
          serviceMonitor:
            enabled: true
        test:
          enabled: false

  - name: promtail
    namespace: victoria-metrics
    chart: grafana/promtail
    version: 6.16.6
    values:
      - config:
          clients:
            - url: http://loki-gateway.victoria-metrics.svc.cluster.local/loki/api/v1/push
          snippets:
            scrapeConfigs: |
              - job_name: kubernetes-pods
                pipeline_stages:
                  - cri: {}
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels:
                      - __meta_kubernetes_pod_controller_name
                    regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                    action: replace
                    target_label: __tmp_controller_name
                  - source_labels:
                      - __meta_kubernetes_pod_label_app_kubernetes_io_name
                      - __meta_kubernetes_pod_label_app
                      - __tmp_controller_name
                      - __meta_kubernetes_pod_name
                    regex: ^;*([^;]+)(;.*)?$
                    action: replace
                    target_label: app
                  - source_labels:
                      - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                      - __meta_kubernetes_pod_label_instance
                    regex: ^;*([^;]+)(;.*)?$
                    action: replace
                    target_label: instance
                  - source_labels:
                      - __meta_kubernetes_pod_label_app_kubernetes_io_component
                      - __meta_kubernetes_pod_label_component
                    regex: ^;*([^;]+)(;.*)?$
                    action: replace
                    target_label: component
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_node_name
                    target_label: node_name
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_namespace
                    target_label: namespace
                  - action: replace
                    replacement: $1
                    separator: /
                    source_labels:
                      - namespace
                      - app
                    target_label: job
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_name
                    target_label: pod
                  - action: replace
                    source_labels:
                      - __meta_kubernetes_pod_container_name
                    target_label: container
                  - action: replace
                    replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_uid
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
                  - action: replace
                    regex: true/(.*)
                    replacement: /var/log/pods/*$1/*.log
                    separator: /
                    source_labels:
                      - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
                      - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
                      - __meta_kubernetes_pod_container_name
                    target_label: __path__
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        serviceMonitor:
          enabled: false
