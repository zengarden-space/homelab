environments:
  default:
    values:
      - env.yaml
---
helmDefaults:
  wait: true
  timeout: 600

repositories:
  - name: argo
    url: https://argoproj.github.io/argo-helm

releases:
  - name: argocd-config
    namespace: argocd
    chart: ./charts/argocd-config
    values:
      - domain: {{ .Values.domain }}
        application:
          git:
            repoURL: https://gitea.homelab.int.{{ .Values.domain }}/zengarden-space/manifests.git
            revision: main
            path: homelab

  - name: argocd
    namespace: argocd
    chart: argo/argo-cd
    needs:
      - argocd/argocd-config
    values:
      - createAggregateRoles: true

        global:
          domain: argocd.homelab.int.{{ .Values.domain }}

        redis-ha:
          enabled: true

        controller:
          replicas: 1

        server:
          autoscaling:
            enabled: true
            minReplicas: 2
          ingress:
            enabled: true
            ingressClassName: internal
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            extraTls:
              - hosts:
                  - argocd.homelab.int.{{ .Values.domain }}
                secretName: argocd-tls

        repoServer:
          autoscaling:
            enabled: true
            minReplicas: 2

        application:
          replicas: 2

        configs:
          secret:
            createSecret: false
          params:
            server.insecure: true
          cm:
            # Google OAuth configuration
            url: https://argocd.homelab.int.{{ .Values.domain }}
            dex.config: |
              connectors:
                - type: google
                  id: google
                  name: Google
                  config:
                    clientID: $argocd-google-oauth:clientId
                    clientSecret: $argocd-google-oauth:clientSecret
                    redirectURI: https://argocd.homelab.int.{{ .Values.domain }}/api/dex/callback
          rbac:
            policy.default: role:readonly
            policy.csv: |
              # ============================================
              # Application Developer Role
              # ============================================
              # Can work with apps in the 'apps' project only
              p, role:app-developer, applications, get, apps/*, allow
              p, role:app-developer, applications, sync, apps/*, allow
              p, role:app-developer, applications, override, apps/*, allow
              p, role:app-developer, applications, action/*, apps/*, allow
              p, role:app-developer, logs, get, apps/*, allow
              p, role:app-developer, exec, create, apps/*, allow

              # Cannot create/delete applications
              p, role:app-developer, applications, create, *, deny
              p, role:app-developer, applications, delete, *, deny

              # Cannot access default project (platform/system apps)
              p, role:app-developer, applications, *, default/*, deny

              # ============================================
              # Platform Operator Role
              # ============================================
              # Full access to apps project
              p, role:platform-operator, applications, *, apps/*, allow
              p, role:platform-operator, logs, get, */*, allow
              p, role:platform-operator, exec, create, */*, allow

              # Can view default project apps (but not modify)
              p, role:platform-operator, applications, get, default/*, allow
              p, role:platform-operator, applications, sync, default/*, deny
              p, role:platform-operator, applications, delete, default/*, deny

              # Can manage projects and repositories
              p, role:platform-operator, projects, get, *, allow
              p, role:platform-operator, projects, create, *, allow
              p, role:platform-operator, projects, update, *, allow
              p, role:platform-operator, repositories, get, *, allow
              p, role:platform-operator, repositories, create, *, allow
              p, role:platform-operator, repositories, update, *, allow

              # Cannot delete critical projects
              p, role:platform-operator, projects, delete, default, deny
              p, role:platform-operator, projects, delete, apps, deny

              # ============================================
              # System Administrator Role
              # ============================================
              # Full access to all projects and ArgoCD management
              p, role:system-admin, applications, *, */*, allow
              p, role:system-admin, logs, *, */*, allow
              p, role:system-admin, exec, *, */*, allow
              p, role:system-admin, projects, *, *, allow
              p, role:system-admin, repositories, *, *, allow
              p, role:system-admin, certificates, *, *, allow
              p, role:system-admin, gpgkeys, *, *, allow
              p, role:system-admin, accounts, get, *, allow
              p, role:system-admin, accounts, update, *, allow

              # Cannot delete clusters
              p, role:system-admin, clusters, delete, *, deny

              # ============================================
              # Cluster Admin Role
              # ============================================
              # Break-glass full access
              p, role:cluster-admin, *, *, *, allow

              # ============================================
              # Role Assignments
              # ============================================
              g, oleksiy.pylypenko@gmail.com, role:cluster-admin

              # Example assignments:
              # g, developer@example.com, role:app-developer
              # g, platformeng@example.com, role:platform-operator
              # g, sysadmin@example.com, role:system-admin

